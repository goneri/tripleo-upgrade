---
- name: create undercloud upgrade scripts
  include: create-undercloud-upgrade-scripts.yaml
  tags: create_undercloud_upgrade_scripts
  when: upgrade_noop|bool or undercloud_upgrade|bool

- block:
    - name: apply pre undercloud upgrade workarounds
      shell: |
        set -o pipefail
        pre_undercloud_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_undercloud_upgrade_workarounds.log
      args:
        chdir: "{{working_dir}}"
      when: upgrade_workarounds

    - name: upgrade undercloud
      shell: |
        set -o pipefail
        bash {{ undercloud_upgrade_script }} 2>&1 {{ timestamper_cmd }} > undercloud_upgrade.log
      args:
        chdir: "{{working_dir}}"
      tags: undercloud_upgrade

    - name: validate undercloud upgrade
      include: undercloud_validate_upgrade.yaml
      tags: undercloud_upgrade_validate

    - name: apply post undercloud upgrade workarounds
      shell: |
        set -o pipefail
        post_undercloud_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_undercloud_upgrade_workarounds.log
      args:
        chdir: "{{working_dir}}"
      when: upgrade_workarounds
  when: undercloud_upgrade|bool

- name: create overcloud upgrade scripts
  include: create-overcloud-upgrade-scripts.yaml
  tags: create_overcloud_upgrade_scripts
  when: upgrade_noop|bool or overcloud_upgrade|bool

- block:
    # TODO: move this out of upgrade
    - name: download container images
      include: container_images.yaml
      when: use_local_docker_registry
      tags: container_images

    - name: create local docker registry environment file
      include: docker_registry_images_env.yaml
      when: create_docker_registry
      tags: docker_registry_images_env

    - name: apply pre docker composable upgrade workarounds
      command: "{{working_dir}}/pre_docker_composable_upgrade_workarounds.sh"
      when: upgrade_workarounds
      tags: docker_composable_upgrade

    - include: docker_composable_upgrade.yml
      tags: docker_composable_upgrade

    - name: launch workload
      shell: |
        set -o pipefail
        {{ workload_launch_script }} 2>&1 {{ timestamper_cmd }} > workload_launch.log
      args:
        chdir: "{{working_dir}}"
      when: workload_launch_post_composable_upgrade|bool

    - name: apply pre nova compute upgrade workarounds
      shell: |
        set -o pipefail
        post_overcloud_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_overcloud_upgrade_workarounds.log
      args:
        chdir: "{{working_dir}}"
      when: upgrade_workarounds
      tags: nova_compute_upgrade

    - name: upgrade nova compute nodes
      include: compute_upgrade.yml
      tags: nova_compute_upgrade

    - name: upgrade swift storage nodes
      include: swiftstorage_upgrade.yml
      tags: swift_storage_upgrade

    - name: apply pre docker upgrade converge workarounds
      shell: |
        set -o pipefail
        pre_overcloud_converge_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_overcloud_converge_workarounds.log
      args:
        chdir: "{{working_dir}}"
      when: upgrade_workarounds
      tags: docker_converge_upgrade

    - include: docker_converge_upgrade.yml
      tags: docker_converge_upgrade

    - name: apply post docker upgrade converge workarounds
      shell: |
        set -o pipefail
        post_overcloud_converge_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_overcloud_converge_workarounds.log
      args:
        chdir: "{{working_dir}}"
      when: upgrade_workarounds
      tags: docker_converge_upgrade

    - name: run controller post upgrade steps
      include: controller_post_upgrade.yml
      tags: controller_post_upgrade
      when: controller_upgrade_post|bool
  when: overcloud_upgrade|bool

